version: '3' 
## 该文件是根据官网改的 ： https://github.com/nextcloud/docker/tree/master/.examples/docker-compose/with-nginx-proxy/mariadb/fpm
## 主要的目的是，修改容器卷目录， 把挂载卷改为 ./data/** 
# 只需修改两个文件，就可以实现https的访问了， 这个文件是官网给的
# db.env文件填写密码：  MYSQL_PASSWORD  
services:
  db:
    image: mariadb:10.5 # 如果运行失败，可以改为mysql
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
    restart: always
    volumes:
      - ./data/db:/var/lib/mysql #这里修改了容器卷
    environment:
      - MYSQL_ROOT_PASSWORD=password # 设置mysql的root密码
    env_file:
      - db.env

  redis:
    image: redis:alpine
    restart: always

  app:
    image: nextcloud:fpm-alpine
    restart: always
    volumes:
      - ./data/nextcloud:/var/www/html #这里修改了容器卷
    environment:
      - MYSQL_HOST=db
      - REDIS_HOST=redis
    env_file:
      - db.env
    depends_on:
      - db
      - redis

  web:
    build: ./web
    restart: always
    volumes:
      - ./data/nextcloud:/var/www/html:ro
    environment:
      - VIRTUAL_HOST=  # 你的域名。前提是要绑定 ip地址
      - LETSENCRYPT_HOST=  # 你的域名。前提是要绑定 ip地址
      - LETSENCRYPT_EMAIL=  # 邮箱，理论上随便写
    depends_on:
      - app
    networks:
      - proxy-tier
      - default

  cron:
    image: nextcloud:fpm-alpine
    restart: always
    volumes:
      - ./data/nextcloud:/var/www/html
    entrypoint: /cron.sh
    depends_on:
      - db
      - redis

  proxy:
    build: ./proxy
    restart: always
    ports:
      - 80:80
      - 443:443
    labels:
      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
    volumes:
      - ./data/certs:/etc/nginx/certs:ro
      - ./data/vhost.d:/etc/nginx/vhost.d
      - ./data/html:/usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
    networks:
      - proxy-tier

  letsencrypt-companion:
    image: nginxproxy/acme-companion
    restart: always
    volumes:
      - ./data/certs:/etc/nginx/certs
      - ./data/acme:/etc/acme.sh
      - ./data/vhost.d:/etc/nginx/vhost.d
      - ./data/html:/usr/share/nginx/html
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - proxy-tier
    depends_on:
      - proxy

# self signed
#  omgwtfssl:
#    image: paulczar/omgwtfssl
#    restart: "no"
#    volumes:
#      - certs:/certs
#    environment:
#      - SSL_SUBJECT=servhostname.local
#      - CA_SUBJECT=my@example.com
#      - SSL_KEY=/certs/servhostname.local.key
#      - SSL_CSR=/certs/servhostname.local.csr
#      - SSL_CERT=/certs/servhostname.local.crt
#    networks:
#      - proxy-tier

# volumes:
#   db:
#   nextcloud:
#   certs:
#   acme:
#   vhost.d:
#   html:

networks:
  proxy-tier:
